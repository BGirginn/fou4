name: Release

on:
  release:
    types: [created]
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    name: Build and Publish Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Create release archive
      run: |
        tar -czf kali-tool-${{ github.ref_name }}.tar.gz \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='.pytest_cache' \
          --exclude='htmlcov' \
          --exclude='.coverage' \
          .
    
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          kali-tool-${{ github.ref_name }}.tar.gz
          dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create release notes
      run: |
        echo "## Release ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Installation" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kali-tool-${{ github.ref_name }}.tar.gz" >> $GITHUB_STEP_SUMMARY
        echo "tar -xzf kali-tool-${{ github.ref_name }}.tar.gz" >> $GITHUB_STEP_SUMMARY
        echo "cd kali-tool" >> $GITHUB_STEP_SUMMARY
        echo "sudo ./install.sh" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

